let express,addLectureToCourseById,createCourse,deleteCourse,getAllCourses,getLecturesByCourseId,updateCourse,authorizedRoles,isLoggedIn,upload;_7a1‍.x([["default",()=>_7a1‍.o]]);_7a1‍.w("express",[["default",["express"],function(v){express=v}]]);_7a1‍.w("../controllers/course.controller",[["addLectureToCourseById",["addLectureToCourseById"],function(v){addLectureToCourseById=v}],["createCourse",["createCourse"],function(v){createCourse=v}],["deleteCourse",["deleteCourse"],function(v){deleteCourse=v}],["getAllCourses",["getAllCourses"],function(v){getAllCourses=v}],["getLecturesByCourseId",["getLecturesByCourseId"],function(v){getLecturesByCourseId=v}],["updateCourse",["updateCourse"],function(v){updateCourse=v}]]);_7a1‍.w("../middlewares/auth.middleware",[["authorizedRoles",["authorizedRoles"],function(v){authorizedRoles=v}],["isLoggedIn",["isLoggedIn"],function(v){isLoggedIn=v}]]);_7a1‍.w("../middlewares/multer.middleware",[["default",["upload"],function(v){upload=v}]]);





const router=express.Router();

router.route('/')
       .get(getAllCourses)
       .post(isLoggedIn,upload.single('thumbnail'),createCourse);
router.route('/:id')
        .get(isLoggedIn,getLecturesByCourseId)
        .put(isLoggedIn,updateCourse)
        .delete(isLoggedIn,deleteCourse)
        .post(addLectureToCourseById);
_7a1‍.d(router);