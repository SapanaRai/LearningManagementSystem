let cookieParser,cors,express,morgan,errorMiddleware,courseRoutes,contactRoutes,userRoutes;_2d4‍.x([["default",()=>_2d4‍.o]]);_2d4‍.w("cookie-parser",[["default",["cookieParser"],function(v){cookieParser=v}]]);_2d4‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_2d4‍.w("dotenv/config");_2d4‍.w("express",[["default",["express"],function(v){express=v}]]);_2d4‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_2d4‍.w("./middlewares/error.middleware",[["default",["errorMiddleware"],function(v){errorMiddleware=v}]]);_2d4‍.w("./routes/course.routes",[["default",["courseRoutes"],function(v){courseRoutes=v}]]);_2d4‍.w("./routes/miscellaneous.routes",[["default",["contactRoutes"],function(v){contactRoutes=v}]]);_2d4‍.w("./routes/user.routes",[["default",["userRoutes"],function(v){userRoutes=v}]]);








const app=express();

app.use(express.json());
app.use(cors({
    origin:[process.env.FRONTEND_URL],
    credentials:true
}))
app.use(express.urlencoded({extended:true}));
app.use(cookieParser());
app.use(morgan('dev'));

app.use('/ping',function(req,res){
    res.send('pong');
})
//Routes of 3 modules
app.use('/api/v1/user',userRoutes);
app.use('/api/v1/course',courseRoutes);
app.use('/api/v1/contact',contactRoutes)

app.all('*',(req,res)=>{
    res.status(404).send('OOPS!! 404 page not found');
})

app.use(errorMiddleware);
_2d4‍.d(app);